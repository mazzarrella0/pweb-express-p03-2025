generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(uuid())
  username   String?
  password   String
  email      String   @unique
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  orders     Order[]

  @@map("users")
}

model Book {
  id               String      @id @default(uuid())
  title            String      @unique
  writer           String
  publisher        String
  publication_year Int
  description      String?
  price            Decimal     @db.Decimal(10, 2)
  stock_quantity   Int
  genre_id         String
  created_at       DateTime    @default(now())
  updated_at       DateTime    @updatedAt
  deleted_at       DateTime?
  genre            Genre       @relation(fields: [genre_id], references: [id])
  order_items      OrderItem[]

  @@map("books")
}

model Genre {
  id         String    @id @default(uuid())
  name       String    @unique
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  deleted_at DateTime?
  books      Book[]

  @@map("genres")
}

model Order {
  id          String      @id @default(uuid())
  user_id     String
  total_price Decimal     @default(0) @db.Decimal(10, 2)  // Tambahkan ini
  created_at  DateTime    @default(now())
  updated_at  DateTime    @updatedAt
  order_items OrderItem[]
  user        User        @relation(fields: [user_id], references: [id])

  @@map("orders")
}

model OrderItem {
  id         String   @id @default(uuid())
  quantity   Int
  price      Decimal  @db.Decimal(10, 2)  // Tambahkan ini
  order_id   String
  book_id    String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  book       Book     @relation(fields: [book_id], references: [id])
  order      Order    @relation(fields: [order_id], references: [id])

  @@map("order_items")
}
